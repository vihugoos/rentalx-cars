name: CI/CD

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: test_user
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: rentx_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

            redis:
                image: redis:alpine
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379

        steps:
          - uses: actions/checkout@v3
        
          - name: Setup node.js
            uses: actions/setup-node@v3
            with:
                node-version: 18
            
          - name: Install dependencies
            run: yarn

          - name: Create .env file
            run: |
                touch .env
                echo "API_BASE_URL='http://localhost:3333'" >> .env
                echo "DISK_STORAGE=local" >> .env
                echo "MAIL_PROVIDER=ethereal" >> .env
                echo "ENVIRONMENT=dev" >> .env
                echo "DATABASE=rentx_test" >> .env
                echo "DATABASE_USERNAME=test_user" >> .env
                echo "DATABASE_PASSWORD=password" >> .env
                echo "DATABASE_PORT=5432" >> .env
                echo "REDIS_HOST=localhost" >> .env
                echo "REDIS_PORT=6379" >> .env
                echo "JWT_SECRET_TOKEN=fec379f309217e47c304e237be824f75" >> .env
                echo "JWT_SECRET_REFRESH_TOKEN=6f8818d507e2355e4b9fbb4356c03f16" >> .env

          - name: Create avatar and cars folder 
            run: |
                mkdir tmp/avatar
                mkdir tmp/cars    

          - name: Run tests
            run: yarn test

          - name: Delete .env file
            run: rm .env

          - name: Build
            run: yarn build
            
          - name: Copy all files to the remote AWS EC2 instance
            uses: appleboy/scp-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                port: ${{ secrets.SSH_PORT }}
                key: ${{ secrets.SSH_KEY }}
                source: "., !node_modules, !.env"
                target: "~/app/rentx-cars"
        
          - name: Update API
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                port: ${{ secrets.SSH_PORT }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    cd ~/app/rentx-cars
                    yarn
                    ./node_modules/.bin/typeorm migration:run
                    docker restart database
                    pm2 restart api_rentx
