name: CI/CD

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: docker
                    POSTGRES_PASSWORD: ignite
                    POSTGRES_DB: rentx_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6544:5432
    
        steps:
          - uses: actions/checkout@v3
        
          - name: Setup Node.js
            uses: actions/setup-node@v3
            with:
                node-version: 18
            
          - name: Install Dependencies
            run: yarn
            
          - name: Build
            run: yarn build
            
          - name: Copy all files to the remote AWS EC2 instance
            uses: appleboy/scp-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                port: ${{ secrets.SSH_PORT }}
                key: ${{ secrets.SSH_KEY }}
                source: "., !node_modules, !.env"
                target: "~/app/rentx-cars"
        
          - name: Update API
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                port: ${{ secrets.SSH_PORT }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    cd ~/app/rentx-cars
                    yarn
                    ./node_modules/.bin/typeorm migration:run
                    docker restart database
                    pm2 restart api_rentx
